import java.util.Random;
import java.util.Scanner;

public class GameManager extends Entity {
    private int countRounds = 0;
    private boolean isPlaying = true;
    private SpawnSystem spawnSystem = new SpawnSystem();
    private Player player;

    public void StartGame() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: ");
        String playerName = scanner.nextLine();
        player = CreatePlayer(playerName);

        while (isPlaying) {
            countRounds++;
            System.out.println("–†–∞—É–Ω–¥ " + countRounds);
            Enemy[] enemiesThisRound = spawnSystem.GenerateEnemies(10);
            System.out.println("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: " + enemiesThisRound.length + " –≤—Ä–∞–≥–æ–≤");

            for (Enemy enemy : enemiesThisRound) {
                Fight(player, enemy);
                if (player.playerHero.health <= 0) {
                    System.out.println("–í—ã –ø–æ–≥–∏–±–ª–∏! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.");
                    isPlaying = false;
                    break;
                }
            }

            if (isPlaying) {
                PlayerExit();
            }
        }
        EndGame();
    }

    public Player CreatePlayer(String name) {
        return new Player(name);
    }

    private void EndGame() {
        System.out.println("–í—ã –ø—Ä–æ—à–ª–∏ " + countRounds + " –≤–æ–ª–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! üëã");
    }

    private void Fight(Player player, Enemy enemy) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();
        System.out.println("–í—ã –Ω–∞—á–∞–ª–∏ –±–æ–π —Å " + enemy.name);

        while (player.playerHero.health > 0 && enemy.health > 0) {
            System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1 - –ê—Ç–∞–∫–æ–≤–∞—Ç—å –≤—Ä–∞–≥–∞\n2 - –°–±–µ–∂–∞—Ç—å");
            int action = scanner.nextInt();

            if (action == 1) {
                player.Attack(enemy);
                if (enemy.health > 0) {
                    enemy.Attack(player);
                }
            } else if (action == 2) {
                System.out.println("–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å —Å–±–µ–∂–∞—Ç—å...");
                if (random.nextDouble() < 0.25) {
                    System.out.println("–í—Ä–∞–≥ –ø–æ–π–º–∞–ª –≤–∞—Å!");
                    enemy.Attack(player);
                    if (player.playerHero.health <= 0) {
                        System.out.println("–í—ã –ø–æ–≥–∏–±–ª–∏! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.");
                        return;
                    }
                } else {
                    System.out.println("–í—ã —É—Å–ø–µ—à–Ω–æ —Å–±–µ–∂–∞–ª–∏ –æ—Ç " + enemy.name + "!");
                    return;
                }
            } else {
                System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 1 –∏–ª–∏ 2.");
            }


            int healAmount = random.nextInt(10,25);
            player.playerHero.health += healAmount;


            System.out.println("–í—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ " + healAmount + " –∑–¥–æ—Ä–æ–≤—å—è.");
            System.out.println("–ó–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + player.playerHero.health);
            System.out.println("–ó–¥–æ—Ä–æ–≤—å–µ –≤—Ä–∞–≥–∞: " + enemy.health);
        }

        if (enemy.health <= 0) {
            System.out.println("–í—ã –ø–æ–±–µ–¥–∏–ª–∏ " + enemy.name + "!");

            if (enemy.weapon != null) {
                Weapon droppedWeapon = enemy.weapon;
                System.out.println("–í—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ –æ—Ä—É–∂–∏–µ: " + droppedWeapon.name);
            } else {
                System.out.println("–£ –≤—Ä–∞–≥–∞ –Ω–µ –±—ã–ª–æ –æ—Ä—É–∂–∏—è.");
            }
        }
    }



    private void PlayerExit() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("–í–≤–µ–¥–∏—Ç–µ:\n1 - –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É üéÆ\n2 - –í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã üö™");
        int playerChoice = scanner.nextInt();

        if (playerChoice == 1) {
            System.out.println("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É! üïπÔ∏è");
        } else if (playerChoice == 2) {
            isPlaying = false;
        } else {
            System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É! üïπÔ∏è");
        }
    }
}
